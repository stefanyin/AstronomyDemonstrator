<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d" x:Class="AstronomyDemonstrator.MainWindow"
        Title="MainWindow" Height="768" Width="1024" x:Name="mediaControlPanel" Loaded="mediaControlPanel_Loaded" Closing="mediaControlPanel_Closing"  WindowStyle="None" Topmost="True" ResizeMode="NoResize" WindowStartupLocation="CenterScreen" >
	<Window.Resources>
		<Style x:Key="ButtonFocusVisual">
			<Setter Property="Control.Template">
				<Setter.Value>
					<ControlTemplate>
						<Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
			<GradientStop Color="#F3F3F3" Offset="0"/>
			<GradientStop Color="#EBEBEB" Offset="0.5"/>
			<GradientStop Color="#DDDDDD" Offset="0.5"/>
			<GradientStop Color="#CDCDCD" Offset="1"/>
		</LinearGradientBrush>
		<SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070"/>
		<Style x:Key="MyButtonStyle1" TargetType="{x:Type Button}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
			<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
			<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Padding" Value="1"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid Margin="0,0,1.5,-9" Width="44" Height="44" HorizontalAlignment="Right" VerticalAlignment="Bottom">
							<Grid.Background>
								<ImageBrush ImageSource="image/back.png"/>
							</Grid.Background>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsKeyboardFocused" Value="true"/>
							<Trigger Property="ToggleButton.IsChecked" Value="true"/>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="#ADADAD"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="MyButtonStyle2" TargetType="{x:Type Button}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
			<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
			<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Padding" Value="1"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid Margin="0,0,1.5,-15" Width="44" Height="44" HorizontalAlignment="Right" VerticalAlignment="Bottom">
							<Grid.Background>
                                <ImageBrush ImageSource="image/exit.png"/>
							</Grid.Background>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsKeyboardFocused" Value="true"/>
							<Trigger Property="ToggleButton.IsChecked" Value="true"/>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="#ADADAD"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="MyButtonStyleStop" TargetType="{x:Type Button}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
			<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
			<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Padding" Value="1"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid Margin="0,6,5,0" Width="66" Height="66">
							<Grid.Background>
                                <ImageBrush ImageSource="image/stop.png"/>
							</Grid.Background>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsKeyboardFocused" Value="true"/>
							<Trigger Property="ToggleButton.IsChecked" Value="true"/>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="#ADADAD"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="MyButtonStylePre" TargetType="{x:Type Button}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
			<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
			<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Padding" Value="1"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid Margin="0,6,5,0" Width="66" Height="66">
							<Grid.Background>
                                <ImageBrush ImageSource="image/up.png"/>
							</Grid.Background>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsKeyboardFocused" Value="true"/>
							<Trigger Property="ToggleButton.IsChecked" Value="true"/>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="#ADADAD"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="MyButtonStyleNext" TargetType="{x:Type Button}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
			<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
			<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Padding" Value="1"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid Margin="0,6,5,0" Width="66" Height="66">
							<Grid.Background>
                                <ImageBrush ImageSource="image/down.png"/>
							</Grid.Background>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsKeyboardFocused" Value="true"/>
							<Trigger Property="ToggleButton.IsChecked" Value="true"/>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="#ADADAD"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
        <Style x:Key="MyButtonStylePlay"  x:Name="PlayButtonStyle" TargetType="{x:Type Button}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
			<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
			<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Padding" Value="1"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid x:Name="MyGrid" Margin="0,6,5,0" Width="66" Height="66">
							<Grid.Background>
                                <ImageBrush ImageSource="image/pause.png"/>
							</Grid.Background>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsKeyboardFocused" Value="true"/>
							<Trigger Property="ToggleButton.IsChecked" Value="true"/>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="#ADADAD"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
        <Style x:Key="MyButtonStylePause"  x:Name="PauseButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="MyGrid" Margin="0,6,5,0" Width="66" Height="66">
                            <Grid.Background>
                                <ImageBrush ImageSource="image/play.png"/>
                            </Grid.Background>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsKeyboardFocused" Value="true"/>
                            <Trigger Property="ToggleButton.IsChecked" Value="true"/>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#ADADAD"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="MyButtonStyleSet" TargetType="{x:Type Button}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
			<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
			<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Padding" Value="1"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid Margin="0,6,5,0" Width="66" Height="66">
							<Grid.Background>
                                <ImageBrush ImageSource="image/pathset.png"/>
							</Grid.Background>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsKeyboardFocused" Value="true"/>
							<Trigger Property="ToggleButton.IsChecked" Value="true"/>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="#ADADAD"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<SolidColorBrush x:Key="ListBorder" Color="#828790"/>
		<Style x:Key="MyListBoxStyle" TargetType="{x:Type ListBox}">
			<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
			<Setter Property="BorderBrush" Value="{StaticResource ListBorder}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
			<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
			<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ListBox}">
						<Grid Margin="9,9.86,-9,-9.192" Width="485" Height="350">
							<ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}" Margin="4,0,0,3.332" Template="{DynamicResource ScrollViewerControlTemplate1}" Foreground="White">
								<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
							</ScrollViewer>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsEnabled" Value="false"/>
							<Trigger Property="IsGrouping" Value="true">
								<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="MyListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="Padding" Value="2,0,0,0"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ListBoxItem}">
						<Grid x:Name="grid" Height="38" Width="453">
							<Grid.Background>
                                <ImageBrush ImageSource="image/item_normal.png"/>
							</Grid.Background>
							<ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="44,0,0,0" Width="399.667" Height="30"/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsSelected" Value="true">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
								<Setter Property="Background" TargetName="grid">
									<Setter.Value>
                                        <ImageBrush ImageSource="image/item_selected.png"/>
									</Setter.Value>
								</Setter>
							</Trigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="true"/>
									<Condition Property="Selector.IsSelectionActive" Value="false"/>
								</MultiTrigger.Conditions>
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
								<Setter Property="OpacityMask" TargetName="contentPresenter" Value="{x:Null}"/>
							</MultiTrigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<LinearGradientBrush x:Key="ProgressBarBackground" EndPoint="1,0" StartPoint="0,0">
			<GradientStop Color="#BABABA" Offset="0"/>
			<GradientStop Color="#C7C7C7" Offset="0.5"/>
			<GradientStop Color="#BABABA" Offset="1"/>
		</LinearGradientBrush>
		<LinearGradientBrush x:Key="ProgressBarBorderBrush" EndPoint="0,1" StartPoint="0,0">
			<GradientStop Color="#B2B2B2" Offset="0"/>
			<GradientStop Color="#8C8C8C" Offset="1"/>
		</LinearGradientBrush>
		<LinearGradientBrush x:Key="ProgressBarGlassyHighlight" EndPoint="0,1" StartPoint="0,0">
			<GradientStop Color="#50FFFFFF" Offset="0.5385"/>
			<GradientStop Color="#00FFFFFF" Offset="0.5385"/>
		</LinearGradientBrush>
		<LinearGradientBrush x:Key="ProgressBarTopHighlight" EndPoint="0,1" StartPoint="0,0">
			<GradientStop Color="#80FFFFFF" Offset="0.05"/>
			<GradientStop Color="#00FFFFFF" Offset="0.25"/>
		</LinearGradientBrush>
		<LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill" EndPoint="0,0" MappingMode="Absolute" StartPoint="-100,0">
			<GradientStop Color="#00000000" Offset="0"/>
			<GradientStop Color="#FF000000" Offset="0.4"/>
			<GradientStop Color="#FF000000" Offset="0.6"/>
			<GradientStop Color="#00000000" Offset="1"/>
		</LinearGradientBrush>
		<LinearGradientBrush x:Key="ProgressBarIndicatorDarkEdgeLeft" EndPoint="1,0" StartPoint="0,0">
			<GradientStop Color="#0C000000" Offset="0"/>
			<GradientStop Color="#20000000" Offset="0.3"/>
			<GradientStop Color="#00000000" Offset="1"/>
		</LinearGradientBrush>
		<LinearGradientBrush x:Key="ProgressBarIndicatorDarkEdgeRight" EndPoint="1,0" StartPoint="0,0">
			<GradientStop Color="#00000000" Offset="0"/>
			<GradientStop Color="#20000000" Offset="0.7"/>
			<GradientStop Color="#0C000000" Offset="1"/>
		</LinearGradientBrush>
		<RadialGradientBrush x:Key="ProgressBarIndicatorLightingEffectLeft" RadiusY="1" RadiusX="1" RelativeTransform="1,0,0,1,0.5,0.5">
			<GradientStop Color="#60FFFFC4" Offset="0"/>
			<GradientStop Color="#00FFFFC4" Offset="1"/>
		</RadialGradientBrush>
		<LinearGradientBrush x:Key="ProgressBarIndicatorLightingEffect" EndPoint="0,0" StartPoint="0,1">
			<GradientStop Color="#60FFFFC4" Offset="0"/>
			<GradientStop Color="#00FFFFC4" Offset="1"/>
		</LinearGradientBrush>
		<RadialGradientBrush x:Key="ProgressBarIndicatorLightingEffectRight" RadiusY="1" RadiusX="1" RelativeTransform="1,0,0,1,-0.5,0.5">
			<GradientStop Color="#60FFFFC4" Offset="0"/>
			<GradientStop Color="#00FFFFC4" Offset="1"/>
		</RadialGradientBrush>
		<LinearGradientBrush x:Key="ProgressBarIndicatorGlassyHighlight" EndPoint="0,1" StartPoint="0,0">
			<GradientStop Color="#90FFFFFF" Offset="0.5385"/>
			<GradientStop Color="#00FFFFFF" Offset="0.5385"/>
		</LinearGradientBrush>
		<Style x:Key="ProgressBarStyle1" TargetType="{x:Type ProgressBar}">
			<Setter Property="Foreground" Value="#01D328"/>
			<Setter Property="Background" Value="{StaticResource ProgressBarBackground}"/>
			<Setter Property="BorderBrush" Value="{StaticResource ProgressBarBorderBrush}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ProgressBar}">
						<Grid x:Name="Background" SnapsToDevicePixels="true">
							<Rectangle Fill="{TemplateBinding Background}" RadiusY="2" RadiusX="2"/>
							<Border Background="{StaticResource ProgressBarGlassyHighlight}" CornerRadius="2" Margin="1"/>
							<Border BorderBrush="#80FFFFFF" BorderThickness="1,0,1,1" Background="{StaticResource ProgressBarTopHighlight}" Margin="1"/>
							<Rectangle x:Name="PART_Track" Margin="1"/>
							<Decorator x:Name="PART_Indicator" HorizontalAlignment="Left" Margin="1">
								<Grid x:Name="Foreground">
									<Grid.Background>
                                        <ImageBrush ImageSource="image/backbar_title.jpg"/>
									</Grid.Background>
									<Grid.ColumnDefinitions>
										<ColumnDefinition MaxWidth="15"/>
										<ColumnDefinition Width="0.1*"/>
										<ColumnDefinition MaxWidth="15"/>
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition/>
										<RowDefinition/>
									</Grid.RowDefinitions>
								</Grid>
							</Decorator>
							<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2"/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="Orientation" Value="Vertical">
								<Setter Property="LayoutTransform" TargetName="Background">
									<Setter.Value>
										<RotateTransform Angle="-90"/>
									</Setter.Value>
								</Setter>
								<Setter Property="LayoutTransform" TargetName="PART_Track">
									<Setter.Value>
										<RotateTransform Angle="90"/>
									</Setter.Value>
								</Setter>
								<Setter Property="LayoutTransform" TargetName="PART_Indicator">
									<Setter.Value>
										<RotateTransform Angle="90"/>
									</Setter.Value>
								</Setter>
								<Setter Property="LayoutTransform" TargetName="Foreground">
									<Setter.Value>
										<RotateTransform Angle="-90"/>
									</Setter.Value>
								</Setter>
							</Trigger>
							<Trigger Property="IsIndeterminate" Value="true"/>
							<Trigger Property="IsIndeterminate" Value="false"/>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ThumbStyle1" TargetType="{x:Type Thumb}">
			<Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
			<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Thumb}">
						<Grid Margin="2.25,2.25,2.75,2.75" Width="25" Height="25" Background="{x:Null}">
							<Grid Margin="-0.063,0.031,0.063,-0.032" Width="25" Height="25" HorizontalAlignment="Stretch">
								<Grid.Background>
                                    <ImageBrush ImageSource="image/竖直滑块_cr.png"/>
								</Grid.Background>
							</Grid>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<ControlTemplate x:Key="ScrollViewerControlTemplate1" TargetType="{x:Type ScrollViewer}">
			<Grid x:Name="Grid" Background="{TemplateBinding Background}">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="Auto"/>
				</Grid.ColumnDefinitions>
				<Grid.RowDefinitions>
					<RowDefinition Height="*"/>
					<RowDefinition Height="Auto"/>
				</Grid.RowDefinitions>
				<Rectangle x:Name="Corner" Grid.Column="1" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Row="1"/>
				<ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
				<ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Style="{DynamicResource ScrollBarStyle1}"/>
				<ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
			</Grid>
		</ControlTemplate>
		<LinearGradientBrush x:Key="VerticalScrollBarBackground" EndPoint="1,0" StartPoint="0,0">
			<GradientStop Color="#E1E1E1" Offset="0"/>
			<GradientStop Color="#EDEDED" Offset="0.20"/>
			<GradientStop Color="#EDEDED" Offset="0.80"/>
			<GradientStop Color="#E3E3E3" Offset="1"/>
		</LinearGradientBrush>
		<SolidColorBrush x:Key="ScrollBarDisabledBackground" Color="#F4F4F4"/>
		<Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Setter Property="Focusable" Value="false"/>
			<Setter Property="IsTabStop" Value="false"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type RepeatButton}">
						<Microsoft_Windows_Themes:ScrollChrome x:Name="Chrome" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" SnapsToDevicePixels="true" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="{TemplateBinding Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph}"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="VerticalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="Focusable" Value="false"/>
			<Setter Property="IsTabStop" Value="false"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type RepeatButton}">
						<Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Setter Property="IsTabStop" Value="false"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Thumb}">
						<Microsoft_Windows_Themes:ScrollChrome x:Name="Chrome" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsDragging}" SnapsToDevicePixels="true" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="{TemplateBinding Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph}"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<LinearGradientBrush x:Key="HorizontalScrollBarBackground" EndPoint="0,1" StartPoint="0,0">
			<GradientStop Color="#E1E1E1" Offset="0"/>
			<GradientStop Color="#EDEDED" Offset="0.20"/>
			<GradientStop Color="#EDEDED" Offset="0.80"/>
			<GradientStop Color="#E3E3E3" Offset="1"/>
		</LinearGradientBrush>
		<Style x:Key="HorizontalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="Focusable" Value="false"/>
			<Setter Property="IsTabStop" Value="false"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type RepeatButton}">
						<Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ScrollBarStyle1" TargetType="{x:Type ScrollBar}">
			<Setter Property="Background" Value="{StaticResource VerticalScrollBarBackground}"/>
			<Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
			<Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
			<Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
			<Setter Property="Template" Value="{DynamicResource ScrollBarControlTemplate1}"/>
			<Style.Triggers>
				<Trigger Property="Orientation" Value="Horizontal">
					<Setter Property="Width" Value="Auto"/>
					<Setter Property="MinWidth" Value="0"/>
					<Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
					<Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
					<Setter Property="Background" Value="{StaticResource HorizontalScrollBarBackground}"/>
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type ScrollBar}">
								<Grid x:Name="Bg" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
									<Grid.ColumnDefinitions>
										<ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
										<ColumnDefinition Width="0.00001*"/>
										<ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
									</Grid.ColumnDefinitions>
									<RepeatButton Command="{x:Static ScrollBar.LineLeftCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="LeftArrow"/>
									<Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}">
										<Track.DecreaseRepeatButton>
											<RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource HorizontalScrollBarPageButton}"/>
										</Track.DecreaseRepeatButton>
										<Track.IncreaseRepeatButton>
											<RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource HorizontalScrollBarPageButton}"/>
										</Track.IncreaseRepeatButton>
										<Track.Thumb>
											<Thumb Style="{StaticResource ScrollBarThumb}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="HorizontalGripper"/>
										</Track.Thumb>
									</Track>
									<RepeatButton Grid.Column="2" Command="{x:Static ScrollBar.LineRightCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="RightArrow"/>
								</Grid>
								<ControlTemplate.Triggers>
									<Trigger Property="IsEnabled" Value="false">
										<Setter Property="Background" TargetName="Bg" Value="{StaticResource ScrollBarDisabledBackground}"/>
									</Trigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Trigger>
			</Style.Triggers>
		</Style>
		<ControlTemplate x:Key="RepeatButtonControlTemplate1" TargetType="{x:Type RepeatButton}">
			<Microsoft_Windows_Themes:ScrollChrome x:Name="Chrome" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" SnapsToDevicePixels="true" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="{TemplateBinding Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph}"/>
		</ControlTemplate>
		<ControlTemplate x:Key="ScrollBarControlTemplate1" TargetType="{x:Type ScrollBar}">
			<Canvas Height="342" Margin="0,0,0.167,0" Width="12">
				<Canvas.Background>
                    <ImageBrush ImageSource="image/scrollbar_bar.png"/>
				</Canvas.Background>
				<Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}" Height="342" Width="12">
					<Track.DecreaseRepeatButton>
						<RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource VerticalScrollBarPageButton}"/>
					</Track.DecreaseRepeatButton>
					<Track.IncreaseRepeatButton>
						<RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource VerticalScrollBarPageButton}" Background="Transparent" HorizontalAlignment="Left" Width="10.167"/>
					</Track.IncreaseRepeatButton>
					<Track.Thumb>
						<Thumb Style="{DynamicResource ThumbStyle2}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="VerticalGripper" Width="6" Margin="3,1.958,3,1.469">
							<Thumb.Background>
								<ImageBrush/>
							</Thumb.Background>
						</Thumb>
					</Track.Thumb>
				</Track>
			</Canvas>
			<ControlTemplate.Triggers>
				<Trigger Property="IsEnabled" Value="false"/>
			</ControlTemplate.Triggers>
		</ControlTemplate>
		<Style x:Key="ThumbStyle2" TargetType="{x:Type Thumb}">
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Setter Property="IsTabStop" Value="false"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Thumb}">
						<Canvas Margin="-0.001,0,0.062,-0.605">
							<Canvas.Background>
                                <ImageBrush ImageSource="image/scrollbar_thumb.png"/>
							</Canvas.Background>
						</Canvas>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<ItemsPanelTemplate x:Key="ItemsPanelTemplate1">
			<VirtualizingStackPanel IsItemsHost="True"/>
		</ItemsPanelTemplate>
		<Style x:Key="MyListViewItemStyle" TargetType="{x:Type ListViewItem}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ListViewItem}">
						<Border x:Name="BD_Collector" CornerRadius="5"  Height="38"    Margin="10,0,0,5" HorizontalAlignment="Stretch" Width="453">
							<Border.Background>
                                <ImageBrush ImageSource="image/item_normal.png"/>
							</Border.Background>
							<Label x:Name="Label_Font" Content="{Binding}" VerticalContentAlignment="Center" HorizontalContentAlignment="Left" FontSize="16" Foreground="White"  Height="Auto" MinWidth="220" FontWeight="Normal" Margin="35,1.5,0,8" />
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True"/>
							<Trigger Property="IsSelected" Value="True">
								<Setter Property="Foreground" TargetName="Label_Font" Value="#FFF0FA5D"/>
								<Setter Property="Background" TargetName="Label_Font" Value="{x:Null}"/>
								<Setter Property="Background" TargetName="BD_Collector">
									<Setter.Value>
                                        <ImageBrush ImageSource="image/item_selected.png"/>
									</Setter.Value>
								</Setter>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ButtonFocusVisual2">
			<Setter Property="Control.Template">
				<Setter.Value>
					<ControlTemplate>
						<Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="BaseButtonStyle" TargetType="{x:Type ButtonBase}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
			<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
			<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Padding" Value="1"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ButtonBase}">
						<Grid Margin="1,0,1.084,0.396" Background="#FF8A3B03">
							<Grid>
								<Grid.Background>
                                    <ImageBrush ImageSource="image/btn_up.png"/>
								</Grid.Background>
							</Grid>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsKeyboardFocused" Value="true"/>
							<Trigger Property="ToggleButton.IsChecked" Value="true"/>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="#ADADAD"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="RepeatButtonStyle1" BasedOn="{StaticResource BaseButtonStyle}" TargetType="{x:Type RepeatButton}">
			<Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
		</Style>
		<ControlTemplate x:Key="RepeatButtonControlTemplate2" TargetType="{x:Type RepeatButton}">
			<Grid Background="#FFEF7B28"/>
		</ControlTemplate>
		<ControlTemplate x:Key="RepeatButtonControlTemplate3" TargetType="{x:Type RepeatButton}">
			<Grid Background="#FFF27928"/>
		</ControlTemplate>
		<Style x:Key="ThumbStyle3" TargetType="{x:Type Thumb}">
			<Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
			<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Thumb}">
						<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
							<Grid Background="#FFA8561C"/>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<ControlTemplate x:Key="RepeatButtonControlTemplate4" TargetType="{x:Type RepeatButton}">
			<Grid Margin="1,0,0.917,0" Background="#FF8C3901">
				<Grid>
					<Grid.Background>
                        <ImageBrush ImageSource="image/btn_down.png"/>
					</Grid.Background>
				</Grid>
			</Grid>
		</ControlTemplate>
		<ControlTemplate x:Key="ListViewScrollBarControlTemplate" TargetType="{x:Type ScrollBar}">
			<Grid x:Name="GridRoot" Width="12" Height="324" Background="{x:Null}">
				<Grid.RowDefinitions>
					<RowDefinition MaxHeight="16" Height="0*"/>
					<RowDefinition Height="*"/>
					<RowDefinition MaxHeight="16" Height="0*"/>
				</Grid.RowDefinitions>

    			<!-- Track 是一种特殊的布局容器，可调整用于在其一侧执行跳转滚动的 thumb 和 repeat button 的大小 -->
				<Track Grid.Row="1" x:Name="PART_Track" Orientation="Vertical" IsDirectionReversed="true" >
					<Track.OpacityMask>
						<ImageBrush/>
					</Track.OpacityMask>
					<Track.Thumb>
						<Thumb Style="{DynamicResource ThumbStyle1}" Margin="1,0,1.083,0" />
					</Track.Thumb>
					<Track.IncreaseRepeatButton>
						<RepeatButton x:Name="PageUp"  Command="ScrollBar.PageDownCommand"  BorderThickness="0" BorderBrush="Transparent" Focusable="False" Template="{DynamicResource RepeatButtonControlTemplate1}" Margin="1,0,1.062,0" Background="Black"/>
					</Track.IncreaseRepeatButton>
					<Track.DecreaseRepeatButton>
						<RepeatButton x:Name="PageDown"  Command="ScrollBar.PageUpCommand"  BorderThickness="0" BorderBrush="Transparent" Focusable="False" Template="{DynamicResource RepeatButtonControlTemplate1}" Margin="1.062,0,1.125,0" Background="{x:Null}" Foreground="Black"/>
					</Track.DecreaseRepeatButton>
				</Track>
			</Grid>

			<!-- 它对 ScrollBar 使用一个模板，并将其旋转为“水平”
                    它还会更改命令，使其执行“向左”和“向右”命令，而不是执行“向上”和“向下”命令 -->
		</ControlTemplate>
		<Style x:Key="SimpleScrollBar" TargetType="{x:Type ScrollBar}">
			<Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="Template" Value="{DynamicResource ListViewScrollBarControlTemplate}"/>
		</Style>
		<Style x:Key="SimpleScrollViewer" TargetType="{x:Type ScrollViewer}" BasedOn="{x:Null}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ScrollViewer}">
						<Grid >
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*"/>
								<ColumnDefinition Width="Auto"/>
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="*"/>
								<RowDefinition Height="Auto"/>
							</Grid.RowDefinitions>
							<ScrollContentPresenter Grid.Column="0" Grid.Row="0" Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" CanContentScroll="{TemplateBinding CanContentScroll}"/>

    						<!-- ScrollBars 的可见性通过控件的实现来控制 -->
							<ScrollBar Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Grid.Column="0" Grid.Row="1" x:Name="PART_HorizontalScrollBar" Style="{DynamicResource SimpleScrollBar}" Orientation="Horizontal" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" Minimum="0" Maximum="{TemplateBinding ScrollableWidth}" />
							<ScrollBar Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Grid.Column="1" Grid.Row="0" x:Name="PART_VerticalScrollBar" Style="{DynamicResource ScrollBarStyle1}" Orientation="Vertical" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Minimum="0" Maximum="{TemplateBinding ScrollableHeight}" />
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<SolidColorBrush x:Key="CheckBoxFillNormal" Color="#F4F4F4"/>
		<SolidColorBrush x:Key="CheckBoxStroke" Color="#8E8F8F"/>
		<Style x:Key="EmptyCheckBoxFocusVisual">
			<Setter Property="Control.Template">
				<Setter.Value>
					<ControlTemplate>
						<Rectangle Margin="1" SnapsToDevicePixels="true" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="CheckRadioFocusVisual">
			<Setter Property="Control.Template">
				<Setter.Value>
					<ControlTemplate>
						<Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="CheckBoxStylePlay" TargetType="{x:Type CheckBox}">
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="Background" Value="{StaticResource CheckBoxFillNormal}"/>
			<Setter Property="BorderBrush" Value="{StaticResource CheckBoxStroke}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="FocusVisualStyle" Value="{StaticResource EmptyCheckBoxFocusVisual}"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type CheckBox}">
						<BulletDecorator Background="Transparent" SnapsToDevicePixels="true">
							<BulletDecorator.Bullet>
								<Microsoft_Windows_Themes:BulletChrome BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" IsChecked="{TemplateBinding IsChecked}" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}"/>
							</BulletDecorator.Bullet>
						</BulletDecorator>
						<ControlTemplate.Triggers>
							<Trigger Property="HasContent" Value="true">
								<Setter Property="FocusVisualStyle" Value="{StaticResource CheckRadioFocusVisual}"/>
								<Setter Property="Padding" Value="4,0,0,0"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
			<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
			<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Padding" Value="1"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid x:Name="MyGrid" Margin="0,6,5,0" Width="66" Height="66">
							<Grid.Background>
                                <ImageBrush ImageSource="image/volumeadd.png"/>
							</Grid.Background>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsKeyboardFocused" Value="true"/>
							<Trigger Property="ToggleButton.IsChecked" Value="true"/>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="#ADADAD"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ButtonStyle2" TargetType="{x:Type Button}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
			<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
			<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Padding" Value="1"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid x:Name="MyGrid" Margin="0,6,5,0" Width="66" Height="66">
							<Grid.Background>
                                <ImageBrush ImageSource="image/pause.png"/>
							</Grid.Background>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsKeyboardFocused" Value="true"/>
							<Trigger Property="ToggleButton.IsChecked" Value="true"/>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="#ADADAD"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ButtonStyle3" TargetType="{x:Type Button}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
			<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
			<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Padding" Value="1"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid x:Name="MyGrid" Margin="0,6,5,0" Width="66" Height="66">
							<Grid.Background>
                                <ImageBrush ImageSource="image/volumedecrease.png"/>
							</Grid.Background>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsKeyboardFocused" Value="true"/>
							<Trigger Property="ToggleButton.IsChecked" Value="true"/>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="#ADADAD"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="MyButtonStyleNoMute" TargetType="{x:Type Button}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
			<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
			<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Padding" Value="1"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid x:Name="MyGrid" Margin="0,6,5,0" Width="66" Height="66">
							<Grid.Background>
                                <ImageBrush ImageSource="image/nomute.png"/>
							</Grid.Background>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsKeyboardFocused" Value="true"/>
							<Trigger Property="ToggleButton.IsChecked" Value="true"/>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="#ADADAD"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="MyButtonStyleMute" TargetType="{x:Type Button}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
			<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
			<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Padding" Value="1"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid x:Name="MyGrid" Margin="0,6,5,0" Width="66" Height="66">
							<Grid.Background>
                                <ImageBrush ImageSource="image/mute.png"/>
							</Grid.Background>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsKeyboardFocused" Value="true"/>
							<Trigger Property="ToggleButton.IsChecked" Value="true"/>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="#ADADAD"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	</Window.Resources>
    <Grid Width="1024" Height="768" >
    	<Grid.Background>
            <ImageBrush ImageSource="image/backgroud_chapter_1024.jpg"/>
    	</Grid.Background>
        <Grid.RowDefinitions>
        	<RowDefinition />
        </Grid.RowDefinitions>
        <Button Content="最小化" Height="38.5" HorizontalAlignment="Left" Margin="897.5,0,0,0" x:Name="minimize" VerticalAlignment="Top" Width="44.5" Click="minimize_Click" Style="{DynamicResource MyButtonStyle1}" />
        <Button Content="关闭" Height="26.5" HorizontalAlignment="Left" Margin="947,5,0,0" x:Name="exit" VerticalAlignment="Top" Width="47" Click="exit_Click" Style="{DynamicResource MyButtonStyle2}" />
        <Canvas Height="44" Margin="452,12,442,0" VerticalAlignment="Top" Width="130" MouseDown="Canvas_MouseDown" Opacity="0">
        	<Canvas.Background>
                <ImageBrush ImageSource="image/logo.png"/>
        	</Canvas.Background>
        </Canvas>
        <Grid Margin="18,180,436,145" Width="570" Height="443">
        	<Grid.Background>
                <ImageBrush ImageSource="image/listbox_back.png"/>
        	</Grid.Background>
        	<Canvas Margin="55.005,400.444,60,19.555" x:Name="progressCanvas" Height="30" Width="455">
        		<ProgressBar x:Name="progressBar"  Margin="0,12.5,0,0"  Height="5" Width="455"  MouseUp="progressBar_MouseUp" MouseDown="progressBar_MouseDown" VerticalAlignment="Top" Style="{DynamicResource ProgressBarStyle1}" />
        		<Thumb x:Name="progressThum" Width="30" Height="30" Margin="0,0,425,0"      DragCompleted="progressThum_DragCompleted" DragStarted="progressThum_DragStarted" Style="{DynamicResource ThumbStyle1}"  d:IsHidden="True" DragDelta="progressThum_DragDelta" RenderTransformOrigin="0.5,0.5" />
        	</Canvas>
            <ListView x:Name="playListView" SelectionMode="Single" Padding="5,5,0,10" FontSize="16" SelectionChanged="playListBox_SelectionChanged"   BorderThickness="0" Margin="41,35,44.662,45"  ItemContainerStyle="{DynamicResource MyListViewItemStyle}" Background="{x:Null}" Foreground="{x:Null}" BorderBrush="{x:Null}">
        		<ListView.Template>
        			<ControlTemplate>
        				<Border Padding="0,0,0,30">
        					<ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled" Style="{DynamicResource SimpleScrollViewer}" Margin="0,0,0,-30">
        						<ItemsPresenter Height="363"/>
        					</ScrollViewer>
        				</Border>
        			</ControlTemplate>

        		</ListView.Template>
        	</ListView>
        </Grid>
        <Grid HorizontalAlignment="Right" Margin="0,180,30,145" Width="406" Height="443">
        	<Grid.Background>
                <ImageBrush ImageSource="image/play_back.png"/>
        	</Grid.Background>
        	<Canvas Margin="96,72.736,97.999,158.264" Width="212" Height="212">
        		<Canvas.Background>
                    <ImageBrush ImageSource="image/play_control.png"/>
        		</Canvas.Background>
        	</Canvas>
        	<Button x:Name="stopButton" Click="stopButton_Click" Margin="77.666,0,262.334,128.597" Content="" Height="66" VerticalAlignment="Bottom" Width="66" Style="{DynamicResource MyButtonStyleStop}">
        		<Button.Background>
        			<ImageBrush/>
        		</Button.Background>
        	</Button>
        	<Button x:Name="setButton" Margin="304,173.403,35.999,203.597" Click="setButton_Click" Content="" Width="66" Style="{DynamicResource MyButtonStyleSet}" Height="66">
        		<Button.Background>
        			<ImageBrush/>
        		</Button.Background>
        	</Button>
        	<Button x:Name="playButton" Margin="31,173.403,308.999,203.597" Click="playButton_Click" Content="" Width="66" Style="{DynamicResource MyButtonStylePlay}" Height="66">
        		<Button.Background>
        			<ImageBrush/>
        		</Button.Background>
        	</Button>
        	<Button x:Name="preMovie" Margin="168.666,0,0,97.264" Content="" Click="preMovie_Click" Height="66" VerticalAlignment="Bottom" Width="66" Style="{DynamicResource MyButtonStylePre}" d:LayoutOverrides="Width" HorizontalAlignment="Left">
        		<Button.Background>
        			<ImageBrush/>
        		</Button.Background>
        	</Button>
        	<Button x:Name="nextMovie" Width="66" Margin="0,0,76,128.597" Content="" Click="nextMovie_Click" HorizontalAlignment="Right" Height="66" VerticalAlignment="Bottom" Style="{DynamicResource MyButtonStyleNext}">
        		<Button.Background>
        			<ImageBrush/>
        		</Button.Background>
        	</Button>
        	<Button x:Name="VolumeUpButton" Margin="265,0,75,27.597" Content="" Width="66" Style="{DynamicResource ButtonStyle1}" Height="66" d:LayoutOverrides="Height" VerticalAlignment="Bottom" Click="VolumeUpButton_Click">
        		<Button.Background>
        			<ImageBrush/>
        		</Button.Background>
        	</Button>
        	<Button x:Name="MuteButton" Margin="169.666,0,170.334,27.597" Content="" Width="66" Style="{DynamicResource MyButtonStyleNoMute}" Height="66" VerticalAlignment="Bottom" d:LayoutOverrides="HorizontalAlignment, Height" Click="MuteButton_Click">
        		<Button.Background>
        			<ImageBrush/>
        		</Button.Background>
        	</Button>
        	<Button x:Name="VolumeDownButton" Margin="76,0,264,27.597" Content="" Width="66" Style="{DynamicResource ButtonStyle3}" Height="66" VerticalAlignment="Bottom" d:LayoutOverrides="Height" RenderTransformOrigin="1.657,0.645" Click="VolumeDownButton_Click">
        		<Button.Background>
        			<ImageBrush/>
        		</Button.Background>
        	</Button>
        	<Canvas Height="50" Margin="56.666,16.667,49.334,0" VerticalAlignment="Top" Width="300">
        		<Canvas.Background>
                    <ImageBrush ImageSource="image/softwarename.png"/>
        		</Canvas.Background>
        	</Canvas>
        </Grid>
        <Canvas Height="13" Margin="464.5,0,443.5,28" VerticalAlignment="Bottom" Width="116" Visibility="Hidden">
        	<Canvas.Background>
                <ImageBrush ImageSource="image/copyrights.png"/>
        	</Canvas.Background>
        </Canvas> 
    </Grid>
</Window>
